//给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。 
//
// 你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。 
//
// 
//
// 示例: 
//
// 给定 nums = [2, 7, 11, 15], target = 9
//
//因为 nums[0] + nums[1] = 2 + 7 = 9
//所以返回 [0, 1]
// 
// Related Topics 数组 哈希表 
// 👍 9132 👎 0


import java.util.HashMap;
import java.util.Map;

//leetcode submit region begin(Prohibit modification and deletion)
class Solution {
    public int[] twoSum(int[] nums, int target) {
        Map<Integer, Integer> map = new HashMap<>();
        for (int i=0;i<nums.length;i++){
            int complement = target - nums[i];
            if (map.containsKey(complement)) {
                return new int[] {map.get(complement), i};//map.get(key),返回值为map中key所对应的value
            }
            map.put(nums[i], i); //map.put(key,value);此map中key值为数组中数值，value值为下标值
        }
        throw new IllegalArgumentException("no two sum solution");
    }
}
//leetcode submit region end(Prohibit modification and deletion)
/*
本题涉及到的知识：
①接口Map的子类HashMap：存放key-value对，无序存放，key不允许重复
②containsKey(key)方法：判断Map集合是否存在指定的Key
③get(key)方法：根据key值返回相应的value值
④put(key,value)方法：向集合中增加内容
 */
